Тестовый файл для различных проверок (подключения к репозеториям и так далее)

rdgrghrtgrtghrtgh


package TestsMail;

import Base.MailBase;
import LoginPages.LoginLeer;
import LoginPages.NewMailLoginPage;
import MainPages.MailMainPage;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.openqa.selenium.By;

import java.util.logging.Logger;

import static com.codeborne.selenide.Selenide.$;

/**
 * 1. Переходим на главную страницу Мейла https://mail.ru
 * 2. Нажимаем на кнопку "Войти"
 * 3. Вводим имя тестового аккаунта
 * 4. Проверяем корректность отображения почты в леере пароля с введенной ранее
 * 5. Вводим пароль
 * 6. Отключаем чекбокс "Запомнить"
 * 7. Нажимаем войти
 * 8. Кликаем по своему аккаунту в правом верхнем углу
 * 9. Нажимаем добавит аккаунт
 * 10. Вводим имя тестового аккаунта
 * 11. Проверяем корректность отображения почты в леере пароля с введенной ранее
 * 12. Вводим пароль
 * 13. Отключаем чекбокс "Запомнить"
 * 14. Нажимаем войти
 * 15. Кликаем по своему аккаунту в правом верхнем углу
 * 16. Проверяем что появился второй аккаунт
 * 17. Проверяем что отображаемые почты отличаются
 */

public class TestAddSecondAccount extends MailBase {

    private static final Logger LOGGER = Logger.getLogger(String.valueOf(TestSendMail.class));
    public static final String LOGIN = "margleibblan@mail.ru";
    private static final String PASSWORD = "qwedcxzasdfghjkl;'\\";
    public static final String SECOND_LOGIN = "mrgleibblan@mail.ru";
    private static final String SECOND_PASSWORD = "qwedcxzasdfghjkl;'\\";

    @Test
    public void testAddSecondAccount() {
        NewMailLoginPage loginPage = new NewMailLoginPage();
        LOGGER.info("Логин");
        loginPage.doLogin(LOGIN);
        loginPage.doCheckBox();
        LOGGER.info("Пароль");
        loginPage.doPassword(PASSWORD);
        LOGGER.info("Заходим в почту");
        loginPage.goToMainPage();

        MailMainPage mainPage = new MailMainPage();
        LOGGER.info("Открываем леер");
        mainPage.accountButton();
        LOGGER.info("Добавить второй аккаунт");
        mainPage.addAccount();

        LoginLeer loginLeer = new LoginLeer();
        LOGGER.info("Второй логин");
        loginLeer.doLogin(SECOND_LOGIN);
        loginLeer.doCheckBox();
        LOGGER.info("Второй пароль");
        loginLeer.doPassword(SECOND_PASSWORD);
        LOGGER.info("Заходим во вторую почту");
        loginLeer.goToMainPage();
        LOGGER.info("Открываем леер");
        mainPage.accountButton();
        String first_login = $(loginLeer.FIRST_LOGIN).getText();
        String second_login = $(loginLeer.SECOND_LOGIN).getText();
        Assertions.assertNotEquals(first_login, second_login, "Логины совпадают, тест не пройден");
        LOGGER.warning("Логины не совпадают, тест пройден");
    }
}


package LoginPages;

import TestsMail.TestAddSecondAccount;
import TestsMail.TestSendMail;
import com.codeborne.selenide.Selenide;
import org.junit.jupiter.api.Assertions;
import org.openqa.selenium.By;

import java.util.logging.Logger;

import static com.codeborne.selenide.Condition.visible;
import static com.codeborne.selenide.Selenide.$;

public class LoginLeer {

    private static final Logger LOGGER = Logger.getLogger(String.valueOf(NewMailLoginPage.class));
    private static final By LOGIN_BOX = By.xpath(".//input[contains(@name, 'username')]");
    private static final By PASSWORD_BOX = By.xpath(".//*[contains(@name, 'password')]");
    private static final By LOGIN_CONTENT = By.xpath(".//div[contains(@id, 'login-content')]");
    private static final By LOGIN_FRAME = By.xpath("//iframe[contains(@class, 'ag-popup__frame__layout__iframe')]");
    private static final By CHECKBOX = By.xpath(".//*[contains(@class, 'box-0-2-111 activeBox-0-2-116')]");
    private static final By GO_TO_PASSWORD = By.xpath(".//button[contains(@data-test-id, 'next-button')]");
    private static final By GO_TO = By.xpath(".//button[contains(@data-test-id, 'submit-button')]");
    private static final By CHECK_E_MAIL = By.xpath(".//*[contains(@class, 'email-block__inner-content')]");
    public static final By FIRST_LOGIN = By.xpath(".//div[contains(@class, 'ph-desc svelte-1vf03eq')]");
    public static final By SECOND_LOGIN = By.xpath(".//div[contains(@class, 'ph-account__desc svelte-1ogjrbg')]");

    public void doLogin(String login) {
        LOGGER.info("Переключаемся во фрейм формы логина");
        $(LOGIN_FRAME).shouldBe(visible);
        Selenide.switchTo().frame($(LOGIN_FRAME).shouldBe(visible));
        LOGGER.warning("Ждем появления формы логина");
        $(LOGIN_CONTENT).shouldBe(visible);
        LOGGER.info("Находим поле для ввода почты и вводим почту");
        $(LOGIN_BOX).shouldBe(visible).sendKeys(login);
    }

    public void doCheckBox() {
        LOGGER.warning("Проверяем видимость чекбокса и выключаем его");
        $(CHECKBOX).shouldBe(visible).click();
    }

    public void doPassword(String password) {
        LOGGER.warning("Проверяем видимость кнопки для ввода пароля и кликаем на нее");
        $(GO_TO_PASSWORD).shouldBe(visible).click();
        LOGGER.info("Сравниваем введенный адрес почты и отображаемый");
        String compareEmail = $(CHECK_E_MAIL).getText();
        Assertions.assertEquals(TestAddSecondAccount.SECOND_LOGIN, compareEmail, "Логины не совпадают");
        LOGGER.info("Находим поле для ввода пароля и вводим пароль");
        $(PASSWORD_BOX).shouldBe(visible).sendKeys(password);
    }

    public void goToMainPage() {
        LOGGER.warning("Проверяем видимость кнопки входа и заходим в аккаунт");
        $(GO_TO).shouldBe(visible).click();
    }
}
